@import './modus-button.vars';

:host {
  cursor: pointer;
  display: inline-block;
  position: relative;
  width: auto;
}

button {
  align-items: center;
  border: $rem-1px solid transparent;
  border-radius: $rem-2px;
  cursor: default;
  display: inline-flex;
  font-family: $primary-font;
  font-weight: $btn-font-weight;
  justify-content: center;
  padding: 0;
  position: relative;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  width: 100%;

  .icon {
    align-items: center;
    display: flex;
    flex: 0 0 auto;
    pointer-events: none;
  }

  &:hover {
    cursor: pointer;
  }

  &:disabled {
    background-color: $modus-btn-disabled-bg;
    color: $modus-btn-disabled-color;
    cursor: default;
    opacity: 0.3;
    pointer-events: none;

    :not(.style-borderless) {
      border-color: $modus-btn-disabled-border-color;
    }
  }

  &.size-small {
    height: 24px;
    padding: 0 8px;

    .label {
      font-size: $rem-12px;
      padding: 0 4px;
    }

    .icon svg {
      height: 16px;
      width: 16px;
    }

    &.icon-only {
      height: 32px;
      padding: 0 4px;

      .icon svg {
        height: 24px;
        width: 24px;
      }
    }
  }

  &.size-medium {
    height: 32px;
    padding: 0 8px;

    .label {
      font-size: $rem-14px;
      padding: 0 8px;
    }

    .icon svg {
      height: 24px;
      width: 24px;
    }

    &.icon-only {
      height: 40px;
      padding: 0 8px;

      .icon svg {
        height: 24px;
        width: 24px;
      }
    }
  }

  &.size-large {
    height: 48px;
    padding: 0 12px;

    .label {
      font-size: $rem-16px;
      padding: 0 8px;
    }

    .icon svg {
      height: 24px;
      width: 24px;
    }

    &.icon-only {
      height: 48px;
      padding: 0 8px;

      .icon svg {
        height: 32px;
        width: 32px;
      }
    }
  }

  &.style-borderless:not(.icon-only) {
    background-color: $modus-btn-borderless-bg;
    color: $modus-btn-borderless-color;

    svg path {
      fill: $modus-btn-borderless-color !important;
    }

    &:hover:not([disabled]) {
      background-color: $modus-btn-borderless-hover-bg;
      color: $modus-btn-borderless-hover-color;

      svg path {
        fill: $modus-btn-borderless-hover-color;
      }
    }

    &:active:not([disabled]) {
      background-color: $modus-btn-borderless-active-bg;
      color: $modus-btn-borderless-active-color;

      svg path {
        fill: $modus-btn-borderless-active-color;
      }
    }
  }

  &.style-borderless.icon-only {
    background: transparent;

    @each $color, $value in $btn-icon-only-theme-colors {
      &.color-#{$color} {
        $btn-color: var(--modus-btn-icon-only-#{$color}-color, $value);

        color: $btn-color;

        svg path {
          fill: $btn-color;
        }
      }

      // Hover state
      &.color-#{$color}:hover:not([disabled]) {
        $btn-color: var(--modus-btn-icon-only-#{$color}-hover-color, map-get($btn-icon-only-hover, $color, 'color'));

        background-color: var(--modus-btn-icon-only-#{$color}-hover-bg, map-get($btn-icon-only-hover, $color, 'bg'));
        color: $btn-color;

        svg path {
          fill: $btn-color;
        }
      }

      // Active state
      &.color-#{$color}:active:not([disabled]) {
        $btn-color: var(--modus-btn-icon-only-#{$color}-active-color, map-get($btn-icon-only-active, $color, 'color'));

        background-color: var(--modus-btn-icon-only-#{$color}-active-bg, map-get($btn-icon-only-active, $color, 'bg'));
        color: $btn-color;

        svg path {
          fill: $btn-color;
        }
      }
    }
  }

  // Solid variants
  &.style-fill {
    @each $color, $value in $btn-theme-colors {
      $default-text-color: $white;

      @if $color == 'tertiary' {
        $default-text-color: $col_trimble_gray;
      }

      &.color-#{$color} {
        background-color: var(--modus-btn-#{$color}-bg, $value);
        border-color: var(--modus-btn-#{$color}-border-color, $value);
        color: var(--modus-btn-#{$color}-color, $default-text-color);

        svg path {
          fill: var(--modus-btn-#{$color}-color, $default-text-color);
        }
      }

      // Hover state
      &.color-#{$color}:hover:not([disabled]) {
        background-color: var(--modus-btn-#{$color}-hover-bg, map-get($btn-hover-colors, $color));
        border-color: var(--modus-btn-#{$color}-hover-bg, map-get($btn-hover-colors, $color));
      }

      // Active state
      &.color-#{$color}:active:not([disabled]) {
        background-color: var(--modus-btn-#{$color}-active-bg, map-get($btn-active-colors, $color));
        border-color: var(--modus-btn-#{$color}-active-bg, map-get($btn-active-colors, $color));
      }
    }
  }

  // Outline variants
  &.style-outline {
    @each $color, $value in $btn-outline-theme-colors {
      $alias: $color;

      @if $color == 'dark' {
        $alias: 'secondary';
      }
      &.color-#{$alias} {
        $btn-color: var(--modus-btn-outline-#{$color}-color, $value);

        background-color: var(--modus-btn-outline-#{$color}-bg, transparent);
        border-color: $btn-color;
        color: $btn-color;

        svg path {
          fill: $btn-color;
        }
      }

      // Hover state
      &.color-#{$alias}:hover:not([disabled]) {
        $btn-color: var(--modus-btn-outline-#{$color}-hover-color, map-get($btn-outline-hover, $color, 'color'));

        background-color: var(--modus-btn-outline-#{$color}-hover-bg, map-get($btn-outline-hover, $color, 'bg'));
        border-color: $btn-color;
        color: $btn-color;

        svg path {
          fill: $btn-color;
        }
      }

      // Active state
      &.color-#{$alias}:active:not([disabled]) {
        $btn-color: var(--modus-btn-outline-#{$color}-active-color, map-get($btn-outline-active, $color, 'color'));

        background-color: var(--modus-btn-outline-#{$color}-active-bg, map-get($btn-outline-active, $color, 'bg'));
        border-color: $btn-color;
        color: $btn-color;

        svg path {
          fill: $btn-color;
        }
      }
    }
  }
}
