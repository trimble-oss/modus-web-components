@import './modus-button.vars';

button {
  align-items: center;
  border: $rem-1px solid transparent;
  border-radius: $rem-2px;
  cursor: default;
  display: inline-flex;
  font-family: $primary-font;
  font-weight: $btn-font-weight;
  justify-content: center;
  padding: 0;
  position: relative;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  user-select: none;
  white-space: nowrap;

  &:hover {
    cursor: pointer;
  }

  &:disabled {
    background-color: $modus-btn-disabled-bg;
    border-color: $modus-btn-disabled-border-color;
    color: $modus-btn-disabled-color;
    cursor: default;
    opacity: 0.3;
  }

  &.size-small {
    font-size: 12px;
    height: 24px;
    padding: 0 8px;
  }

  &.size-medium {
    font-size: 14px;
    height: 32px;
    padding: 0 16px;
  }

  &.size-large {
    font-size: 16px;
    height: 48px;
    padding: 0 24px;
  }

  &.style-borderless {
    background-color: $modus-btn-borderless-bg;
    color: $modus-btn-borderless-color;
    fill: $modus-btn-borderless-color;

    &:hover:not([disabled]) {
      background-color: $modus-btn-borderless-hover-bg;
      color: $modus-btn-borderless-hover-color;
      fill: $modus-btn-borderless-hover-color;
    }

    &:active:not([disabled]) {
      background-color: $modus-btn-borderless-active-bg;
      color: $modus-btn-borderless-active-color;
      fill: $modus-btn-borderless-active-color;
    }
  }

  // Solid variants
  &.style-fill {
    @each $color, $value in $btn-theme-colors {
      &.color-#{$color} {
        background-color: var(--modus-btn-bg, $value);
        border-color: var(--modus-btn-border-color, $value);

        @if $color == 'tertiary' {
          color: var(--modus-btn-color, $col_trimble_gray);
          fill: var(--modus-btn-color, $col_trimble_gray);
        } @else {
          color: var(--modus-btn-color, $white);
          fill: var(--modus-btn-color, $white);
        }
      }

      // Hover state
      &.color-#{$color}:hover:not([disabled]) {
        background-color: var(--modus-btn-hover-bg, map-get($btn-hover-colors, $color));
        border-color: var(--modus-btn-hover-border-color, map-get($btn-hover-colors, $color));

        @if $color == 'tertiary' {
          color: var(--modus-btn-hover-color, $col_trimble_gray);
          fill: var(--modus-btn-hover-color, $col_trimble_gray);
        } @else {
          color: var(--modus-btn-hover-color, $white);
          fill: var(--modus-btn-hover-color, $white);
        }
      }

      // Active state
      &.color-#{$color}:active:not([disabled]) {
        background-color: var(--modus-btn-active-bg, map-get($btn-active-colors, $color));
        border-color: var(--modus-btn-active-border-color, map-get($btn-active-colors, $color));

        @if $color == 'tertiary' {
          color: var(--modus-btn-active-color, $col_trimble_gray);
          fill: var(--modus-btn-active-color, $col_trimble_gray);
        } @else {
          color: var(--modus-btn-active-color, $white);
          fill: var(--modus-btn-active-color, $white);
        }
      }
    }
  }

  // Outline variants
  &.style-outline {
    @each $color, $value in $btn-outline-theme-colors {
      $alias: $color;
      @if $color == 'dark' {
        $alias: 'secondary';
      }
      &.color-#{$alias} {
        background-color: var(--modus-btn-bg, transparent);
        border-color: var(--modus-btn-border-color, $value);
        color: var(--modus-btn-color, $value);
        fill: var(--modus-btn-color, $value);
      }

      // Hover state
      &.color-#{$alias}:hover:not([disabled]) {
        background-color: var(--modus-btn-hover-bg, map-get($btn-outline-hover, $color, 'bg'));
        border-color: var(--modus-btn-hover-border-color, map-get($btn-outline-hover, $color, 'color'));
        color: var(--modus-btn-hover-color, map-get($btn-outline-hover, $color, 'color'));
        fill: var(--modus-btn-hover-color, map-get($btn-outline-hover, $color, 'color'));
      }

      // Active state
      &.color-#{$alias}:active:not([disabled]) {
        background-color: var(--modus-btn-active-bg, map-get($btn-outline-active, $color, 'bg'));
        border-color: var(--modus-btn-active-border-color, map-get($btn-outline-active, $color, 'color'));
        color: var(--modus-btn-active-color, map-get($btn-outline-active, $color, 'color'));
        fill: var(--modus-btn-active-color, map-get($btn-outline-active, $color, 'color'));
      }
    }
  }
}
