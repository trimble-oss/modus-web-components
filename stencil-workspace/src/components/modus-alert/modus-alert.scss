@import './modus-alert.vars';

div.alert {
  align-items: center;
  border: 1px solid;
  border-left-width: $alert-left-border-width;
  border-radius: 4px;
  box-sizing: border-box;
  display: flex;
  font-family: $primary-font;
  min-height: 56px;
  padding: $rem-16px;
  position: relative;

  &.type-error {
    background-color: $modus-alert-danger-bg;
    border-color: $modus-alert-danger-border-color;
    color: $modus-alert-danger-color;

    // Note - ::slotted targets only the first level elements. Although nested text nodes are receiving the styles, the nested anchor links are not functioning properly.
    // https://developer.mozilla.org/en-US/docs/Web/CSS/::slotted
    // https://stackoverflow.com/questions/61626493/slotted-css-selector-for-nested-children-in-shadowdom-slot
    ::slotted(a) {
      color: $modus-alert-danger-link-color;
    }

    .icon-check-circle,
    .icon-error,
    .icon-info,
    .icon-warning {
      path {
        fill: $modus-alert-danger-color;
      }
    }
  }

  &.with-action-button {
    padding: 12px 16px;
  }

  &.type-info {
    background-color: $modus-alert-primary-bg;
    border-color: $modus-alert-primary-border-color;
    color: $modus-alert-primary-color;

    ::slotted(a) {
      color: $modus-alert-primary-link-color;
    }

    .icon-check-circle,
    .icon-error,
    .icon-info,
    .icon-warning {
      path {
        fill: $modus-alert-primary-color;
      }
    }
  }

  &.type-info-gray {
    background-color: $modus-alert-secondary-bg;
    border-color: $modus-alert-secondary-border-color;
    color: $modus-alert-secondary-color;

    ::slotted(a) {
      color: $modus-alert-secondary-link-color;
    }

    .icon-check-circle,
    .icon-error,
    .icon-info,
    .icon-warning {
      path {
        fill: $modus-alert-secondary-color;
      }
    }
  }

  &.type-info-gray-dark {
    background-color: $modus-alert-dark-bg;
    border-color: $modus-alert-dark-border-color;
    color: $modus-alert-dark-color;

    ::slotted(a) {
      color: $modus-alert-dark-link-color;
    }

    .icon-check-circle,
    .icon-error,
    .icon-info,
    .icon-warning {
      path {
        fill: $modus-alert-dark-color;
      }
    }
  }

  &.type-success {
    background-color: $modus-alert-success-bg;
    border-color: $modus-alert-success-border-color;
    color: $modus-alert-success-color;

    ::slotted(a) {
      color: $modus-alert-success-link-color;
    }

    .icon-check-circle,
    .icon-error,
    .icon-info,
    .icon-warning {
      path {
        fill: $modus-alert-success-color;
      }
    }
  }

  &.type-warning {
    background-color: $modus-alert-warning-bg;
    border-color: $modus-alert-warning-border-color;
    color: $modus-alert-warning-color;

    ::slotted(a) {
      color: $modus-alert-warning-link-color;
    }

    .icon-check-circle,
    .icon-error,
    .icon-info,
    .icon-warning {
      path {
        fill: $modus-alert-warning-color;
      }
    }
  }

  .icon {
    display: flex;
  }

  .message {
    font-size: $rem-14px;
    font-weight: $alert-font-weight;
  }

  .icon-check-circle,
  .icon-error,
  .icon-info,
  .icon-warning {
    margin-right: 8px;
  }

  .alert-buttons-container {
    align-items: center;
    display: flex;
    margin-left: auto;
  }

  .action-button {
    display: flex;
    margin-right: 2px;
  }

  .icon-close-container {
    cursor: pointer;
    display: flex;

    .icon-close {
      path {
        fill: $modus-alert-close-color;
      }

      &:hover {
        opacity: $modus-alert-close-hover-opacity;
      }
    }
  }
}
