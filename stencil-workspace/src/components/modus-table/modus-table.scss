@import './modus-table.vars';

.table-container {
  border: $rem-1px $modus-table-border-color solid;
  overflow: auto;

  &::-webkit-scrollbar {
    height: 0.75em;
    width: 0.75em;
  }

  &::-webkit-scrollbar-track {
    background-color: $modus-table-scrollbar-track-color;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $modus-table-scrollbar-thumb-color;
    border-radius: 0.25em;
  }
}

.borderless {
  border: none !important;
}

table {
  border-collapse: separate; // Sticky table cells lose their border when used with `border-collapse:collapse`.
  border-spacing: 0; // Set `border-collapse: separate` and `border-spacing: 0` to resolve the problem metion in above line.
  font-family: $primary-font;
  font-size: $rem-14px;
  width: 100%;

  &.cell-borderless {
    th,
    td,
    tr {
      border: none;
      box-shadow: none;
    }
  }

  th,
  td {
    box-sizing: border-box;

    &.row-checkbox {
      padding: 0.5rem !important;
      width: 46px;
    }
  }

  th.row-checkbox + th.sticky-left,
  td.row-checkbox + td.sticky-left {
    left: 46.25px;
  }

  thead {
    position: sticky;
    top: 0;
    z-index: 2;

    &.show-resize-cursor {
      th {
        cursor: e-resize;

        .can-sort {
          .sort-icon-container {
            cursor: e-resize;
          }
        }
      }
    }

    &.show-column-reorder-cursor:not(.show-resize-cursor) {
      th:not(.sticky-left) {
        &:hover {
          cursor: grab;
        }

        &:active {
          cursor: grabbing;
        }
      }
    }

    tr {
      color: $modus-table-header-color;

      th {
        background-color: $modus-table-header-bg;
        border-right: $rem-1px $modus-table-border-color solid;
        box-shadow: inset 0 -0.5px 0 $modus-table-border-color;
        font-weight: $font-weight-semi-bold;
        overflow: hidden;
        padding: $rem-8px $rem-8px $rem-8px $rem-16px;
        position: relative;

        .can-sort {
          align-items: center;
          display: flex;
          justify-content: space-between;

          .sort-icon-container {
            cursor: pointer;
            padding: $rem-2px $rem-2px 0;

            .sort-icon {
              svg {
                fill: $modus-table-header-color;
              }

              &:focus {
                outline-style: auto;
              }

              &:focus:not(:focus-visible) {
                outline-style: none;
              }
            }

            .disabled {
              opacity: 0.5;
            }

            .hidden {
              visibility: hidden;
            }

            &:focus {
              .hidden {
                visibility: visible;
              }
            }
          }

          &:hover {
            .hidden {
              visibility: visible;
            }
          }
        }

        .resize-handle {
          &:focus-visible {
            outline: none;
          }

          cursor: e-resize;
          height: 100%;
          position: absolute;
          right: 0;
          top: 0;
          touch-action: none;
          user-select: none;
          width: $rem-3px;
        }

        &:not(.active-resize) {
          .resize-handle:focus-visible {
            border-right: 2px solid $modus-table-header-color;
          }
        }

        &:has(modus-tooltip:hover) {
          // On hover of child, parent overflow property is changed.
          overflow: visible;
        }
      }
    }
  }

  tbody {
    tr:first-child {
      td {
        border-top: none;
      }
    }

    tr:last-child {
      td {
        border-bottom: none;
      }
    }

    tr {
      color: $modus-table-body-color;

      .wrap-text {
        overflow: hidden;
        text-overflow: ellipsis;
        text-wrap: nowrap;
      }

      td {
        background-color: $modus-table-body-bg;
        border-top: $rem-1px $modus-table-border-color solid;

        .table-cell {
          align-items: center;
          display: flex;

          .cell-link {
            color: $modus-table-cell-link-colour;
            cursor: pointer;
            font-weight: $font-weight-semi-bold;

            &:hover {
              text-decoration: underline;
            }
          }

          &.text-align-right {
            justify-content: flex-end;
          }

          .expand {
            cursor: pointer;
            display: flex;
          }
        }
      }

      &.enable-hover {
        &:hover {
          td {
            background-color: $modus-table-hover-bg;
          }
        }
      }
    }
  }

  tfoot {
    tr {
      &.summary-row {
        background-color: $modus-table-header-bg;
        bottom: 0;
        box-shadow: 1px -1px $modus-table-border-color;
        position: sticky;
        z-index: 2;

        td {
          background-color: $modus-table-header-bg;
          border: none;
          font-weight: 700;

          &.text-align-right {
            text-align: right;
          }
        }
      }
    }
  }

  tr {
    height: 3rem;

    th,
    td {
      border-right: $rem-1px $modus-table-border-color solid;

      /* The box-sizing property is set to border-box to include padding and border in the element's total width.
      However, in the context of setting the width for the row selection column, the border-box property is causing issues.
      If removing this property doesn't negatively impact the table's layout, it can be safely removed. */
      // box-sizing: border-box;
      min-height: 3rem;
      padding: 0.25rem 1rem;
      text-align: left;

      &.active-resize {
        border-right: 2px $modus-primary-color solid !important;
      }

      &.text-align-center {
        text-align: center;
      }

      &.sticky-left {
        border-right: $rem-2px $modus-table-border-color solid;
        left: 0;
        position: sticky;
        z-index: 1;
      }
    }

    &.row-selected {
      background-color: $modus-table-selected-bg;

      th,
      td {
        background-color: $modus-table-selected-bg;
      }
    }
  }
}

.pagination-container {
  align-items: center;
  color: $modus-table-pagination-color;
  display: flex;
  flex-wrap: wrap;
  font-family: $primary-font;
  font-size: $rem-14px;
  font-weight: 400;
  justify-content: space-between;
  margin-top: $rem-24px;

  .items-per-page {
    align-items: center;
    display: flex;

    modus-select {
      margin-right: $rem-5px;
      min-width: 60px;

      /* Prevent the select from shrinking */
    }

    span {
      margin-right: $rem-5px;
    }
  }

  .pagination-and-count {
    align-items: center;
    display: flex;
    flex-wrap: wrap;

    .total-count {
      margin-right: $rem-5px;

      span {
        margin-right: $rem-5px;

        &:last-child {
          margin: 0;
        }
      }
    }
  }
}

.drag-content {
  background: $modus-data-table-drag-header-bg;
  border: $rem-1px $modus-table-border-color solid;
  cursor: grabbing !important;
  display: flex;
  left: 0;
  opacity: 0.75;
  position: fixed;
  top: 0;
  z-index: 9;

  th {
    align-self: center;
    font-family: $primary-font;
    font-weight: $font-weight-semi-bold;
    padding: 0.25rem 1rem;
    text-align: left;

    div {
      font-size: $rem-14px;
    }
  }

  .sort-icon-container,
  svg {
    display: none;
  }
}

.drop-allow-arrows {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  left: 0;
  position: fixed;
  top: -1px;
  z-index: 9;

  svg {
    fill: $modus-table-header-drop-color;
  }
}
